;;; leo.el --- Interface for dict.leo.org -*- lexical-binding:t -*-
;;
;; Copyright (C) 2020 M.T. Enders <michael AT enders.io>
;;
;; Author: M.T. Enders <michael AT enders.io>
;; Created: 21 Oct 2020
;;
;; Version: 0.1
;; Package-Requires: ((emacs "24.1"))
;; Keywords: convenience
;; URL: https://github.com/mtenders/leo
;; Prefix: leo
;; Separator: -

;;; Commentary:
;;
;; A simple interface for dict.leo.org.
;;
;; Usage:
;;
;; This provides the commands leo-translate-word and
;; leo-translate-at-point.  Both translate from the language set by the
;; custom variable leo-language to German.
;;
;; Available languages: en, es, fr, it, ch, pt, ru, pl

;;; License:
;;
;; This file is NOT part of GNU Emacs.
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <https://www.gnu.org/licenses/>.

;;; Code:
(defcustom leo-language "en"
  "Language to translate from to German.

Available languages: en, es, fr, it, ch, pt, ru, pl"
  :type 'string
  :group 'leo
  :options '("es" "fr" "it" "ch" "pt" "ru" "pl"))

(defun leo--generate-url (lang word)
  "Generate link to query for translations of WORD from LANG to German."
  (concat
   "https://dict.leo.org/dictQuery/m-vocab/"
   lang
   "de/query.xml?tolerMode=nof&lp="
   lang
   "de&lang=de&rmWords=off&rmSearch=on&search="
   word
   "&searchLoc=0&resultOrder=basic&multiwordShowSingle=on"))

(defun leo--parse-xml (url)
  "Parse xml file retrieved from URL."
      (with-temp-buffer
	(url-insert-file-contents url)
	(libxml-parse-xml-region (point-min) (point-max))))

(defun leo--rec-filter (predicate seq &optional acc)
  "Filter SEQ using PREDICATE."
  (cond ((null seq)
         acc)
        ((consp seq)
         (append (leo--rec-filter predicate (car seq) nil)
                 (leo--rec-filter predicate (cdr seq) nil)
                 (if (funcall predicate seq)
                     (cons seq acc)
                   acc)))
        (t
         acc)))

(defun leo--filter-words (parsed-xml)
  "Exctract sublists with key words from PARSED-XML, which is a result from 'libxml-parse-xml-region'."
       (leo--rec-filter (lambda (x) (eq (car x) 'words))
		       parsed-xml))

(defun leo--extract-translation-pairs (lst)
  "Extract translation pairs from LST generated by leo--filter-words."
  (if (null lst) nil
    (cons
     (cons (car (nthcdr 2 (nth 2 (car lst)))) (nthcdr 2 (nth 2 (cadr lst))))
     (leo--extract-translation-pairs (nthcdr 2 lst)))))

(defun leo--print-translation (pairs)
  "Format and print translation PAIRS."
  (if (null pairs) nil
    (princ
     (concat
      (caar pairs)
      "\n   -> "
      (cadar pairs)
      "\n"))
    (leo--print-translation (cdr pairs))))

(defun leo--open-translation-buffer (pairs)
  "Print translation PAIRS to temporary buffer."
  (with-output-to-temp-buffer " *leo*"
    (leo--print-translation pairs))
  (other-window 1))

(defun leo--translate (lang word)
  "Translate WORD from LANG to German."
  (leo--open-translation-buffer
   (leo--extract-translation-pairs
    (leo--filter-words
     (leo--parse-xml
      (leo--generate-url lang word))))))

(defun leo-translate-word (word)
  "Translate WORD from language set by 'leo-language' to German.
Show translations in new buffer windown."
  (interactive "sTranslate: ")
  (leo--translate leo-language word))

(defun leo-translate-at-point ()
  "Translate word under cursor from language set by 'leo-language' to German.
Show translations in new buffer windown."
  (interactive)
  (leo--translate leo-language (current-word)))


(provide 'leo)
;;; leo.el ends here
